# 1. 最低版本
cmake_minimum_required (VERSION 2.7)
# 2. 项目名称
project(SearchEngine)

# specify the C++ standard
# 3. c++ 98/11/14/17
set(CMAKE_CXX_STANDARD 11)
# set(CMAKE_CXX_STANDARD_REQUIRED True)

# 4.---------
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")

# 5. 可执行程序的路径
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# 设置变量
# set(Mosquitto_DLL_DIR D:\\Program_Files\\Mosquitto)
# set(Mosquitto_DIR D:\\Program_Files\\Mosquitto\\devel)
# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})


# 生成时拷贝dll到Bin中
#file(GLOB dll_src "${Mosquitto_DLL_DIR}/*.dll" )
#file(COPY ${dll_src} DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

# find_package(OpenCV  REQUIRED) 如果第三方库里有.cmake文件可以直接调用find_package找路径
# find_package(  REQUIRED)
# 6. 头文件目录
# include_directories(${Mosquitto_DIR})
# include_directories([AFTER|BEFORE] [SYSTEM] dir1 [dir2 ...])
include_directories(${PROJECT_SOURCE_DIR}/include)
FILE(GLOB_RECURSE CURRENT_INCLUDE ${PROJECT_SOURCE_DIR}/include/cppjieba)

# 7. 库目录
# link_directories(
#     ${Mosquitto_DIR}
# )
    
# 查找source目录下的所有*.cpp,*.c源文件,并将文件列表保存到 DIR_LIB_SRCS 变量
# file(GLOB_RECURSE SRC_DIR_LIST "source/*.cpp" "source/*.c")	


# 8.生成单个可执行程序
# file(GLOB SRC_SUGGEST ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
file(GLOB SRC ${CMAKE_CURRENT_SOURCE_DIR}/src)
# aux_source_directory(${PROJECT_SOURCE_DIR}/src SRC)

# 9. 添加可执行程序exec
# add_executable(<name> [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] source1 [source2 ...])
add_executable(suggest1 ${SRC})

# 10. 找到所有含有mian函数的cpp文件，保存在mians里
# file(
#     GLOB_RECURSE mains RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
#     "${CMAKE_CURRENT_SOURCE_DIR}/subscribe.cpp"
#     "${CMAKE_CURRENT_SOURCE_DIR}/publish.cpp"
# )

# 循环遍历每个含main的文件，分别编译生成exe文件
# foreach(mainfile IN LISTS mains)
#     # Get file name without directory
#     get_filename_component(mainname ${mainfile} NAME_WE)
#     add_executable(${mainname} ${mainfile})
#     # 添加库文件目录
#     target_link_libraries(${mainname} mosquitto mosquittopp)# 链接库文件
# endforeach()


